name: Docker Image CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build -t josegarcao/docker-react -f Dockerfile.dev .
      - name: Run test suite
        run: docker run -e CI=true josegarcao/docker-react npm run test -- --coverage

  deploy:
    needs: build # Ensure the deployment occurs after the build job
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Conditional deployment on the main branch

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-north-1'

      - name: Checkout code
        uses: actions/checkout@v3

      # Additional steps for building and preparing your application files could go here

      - name: Upload to S3
        run: |
          aws s3 sync . s3://elasticbeanstalk-eu-north-1-391987539274/docker-react --delete

      - name: Create Application Version
        run: |
          aws elasticbeanstalk create-application-version --application-name docker-react --version-label $GITHUB_SHA --source-bundle S3Bucket="elasticbeanstalk-eu-north-1-391987539274"

      - name: Update Environment
        run: |
          aws elasticbeanstalk update-environment --application-name docker-react --environment-name Docker-react-env --version-label $GITHUB_SHA
